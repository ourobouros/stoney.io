#! /usr/bin/env python3

import datetime
import json
import os
import math
import subprocess
import sys

go_github = '~/Dev/go/src/github.com'
go_ihr = go_github + '/iheartradio'
go = go_github + '/thatguystone'

repos = {
	'acrylic': go + '/acrylic',
	'approxidate': '../approxidate',
	'arduino': '../arduino',
	'assert': go + '/assert',
	'debs': '../debs',
	'ffmpeg': go_ihr + '/optimus/lib/ffmpeg',
	'gocovr': go + '/gocovr',
	'gofreetds': go_github + '/minus5/gofreetds',
	'gomcketama': go + '/gomcketama',
	'goquery': go_github + '/PuerkitoBio/goquery',
	'libquickio-client': '../../IHR/quick.io/client-c',
	'lintartarus': '../lintartarus',
	'murmur': '../murmur',
	'ohmyrss': go + '/ohmyrss',
	'optimus': go_ihr + '/optimus',
	'paratec': go_ihr + '/optimus/lib/paratec',
	'pontoon': go_ihr + '/pontoon',
	'quick': '../../IHR/quick',
	'quick.io': '../../IHR/quick.io/quick.io',
	'quickigo': go_ihr + '/quickigo',
	'QuickIoClient': '../../IHR/quick.io/client-java',
	'QuickiOS': '../../IHR/quick.io/client-ios',
	'quickjs': '../../IHR/quick.io/client-js',
	'svnstash': '../svnstash',
	'swan': go + '/swan',
	'verbinator': '../verbinator',
}

sums = {}

minest = sys.maxsize
maxest = 0

for name, path in repos.items():
	p = subprocess.Popen([
		'git', 'log',
		'--author=andrew@clovar.com',
		'--author=andrewstone@clearchannel.com',
		'--pretty=tformat:', '--numstat',
		'--all'],
		stdout=subprocess.PIPE,
		cwd=os.path.expanduser(path))

	sum = 0
	for l in p.stdout:
		parts = l.decode('utf-8').split('\t')

		if parts[0] != '-':
			sum += int(parts[0])
			sum += int(parts[1])

	sums[name] = sum

	minest = min(minest, sum)
	maxest = max(maxest, sum)

scale = (1 / maxest) * 1000
for name, sum in sums.items():
	# sum = max(1, int((sum - minest) * scale))
	# sum = min(100, sum)
	sums[name] = int(math.log(sum, 3)) * 3

expires = datetime.datetime.now() + datetime.timedelta(hours=1)
sums['acrylic_expires'] = int(expires.timestamp())

print(json.dumps(sums))
